openapi: 3.0.0
info:
  title: RAMSES
  version: dev
tags:
  - name: Auth
  - name: Demo
  - name: Additional Purchase Parts
  - name: Orders
  - name: Importable Orders
  - name: Attachments
  - name: Composition Lines
  - name: Additional Purchase Lines
  - name: Order Material Items
  - name: Order Tasks
  - name: Order Task Templates
  - name: Order Manager
  - name: Resources
  - name: Operating Hours
  - name: Users
  - name: Production Planning
  - name: Storage Locations
  - name: Machine Centers
  - name: Machine Types
  - name: Routing Codes
  - name: Prod Overview
  - name: Prod Orders
  - name: Machine Center
  - name: Broken Part Reasons
  - name: Broken Parts
  - name: Scan
  - name: AppSettings
paths:
  /app-settings:
    get:
      tags:
        - AppSettings
      operationId: AppSettings_list
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppSetting'
    patch:
      tags:
        - AppSettings
      operationId: AppSettings_update
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppSettingBody'
  /login:
    post:
      tags:
        - Auth
      operationId: Auth_postLogin
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                device_name:
                  type: string
              required:
                - email
                - password
                - device_name
  /logout:
    post:
      tags:
        - Auth
      operationId: Auth_postLogout
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'
  /me:
    get:
      tags:
        - Auth
      operationId: Auth_getMe
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeResponse'
  /mes/broken-part-reasons:
    get:
      tags:
        - Broken Part Reasons
      operationId: BrokenPartReasons_list
      parameters:
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_dir'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_by'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BrokenPartReason'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /mes/broken-part-reasons/:
    post:
      tags:
        - Broken Part Reasons
      operationId: BrokenPartReasons_post
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokenPartReason'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokenPartReasonBody'
  /mes/broken-part-reasons/{id}:
    patch:
      tags:
        - Broken Part Reasons
      operationId: BrokenPartReasons_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokenPartReason'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokenPartReasonBodyUpdate'
    delete:
      tags:
        - Broken Part Reasons
      operationId: BrokenPartReasons_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /mes/broken-parts:
    get:
      tags:
        - Broken Parts
      operationId: BrokenParts_list
      parameters:
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_dir'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_by'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BrokenPlannedComponent'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /mes/broken-parts/{id}/repair:
    post:
      tags:
        - Broken Parts
      operationId: BrokenParts_repair
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /mes/machine-center/finish-all:
    post:
      tags:
        - Machine Center
      operationId: MesMachineCenter_finishAll
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishAllBody'
  /mes/machine-center/grouped-order-components:
    get:
      tags:
        - Machine Center
      operationId: MesMachineCenter_getGroupedOrderComponents
      parameters:
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/McOrderComponentsRequest.machine_center_no'
        - $ref: '#/components/parameters/McOrderComponentsRequest.order_no'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/GroupedPlannedComponentRoutingLine'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /mes/machine-center/order-components:
    get:
      tags:
        - Machine Center
      operationId: MesMachineCenter_getOrderComponents
      parameters:
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/McOrderComponentsRequest.machine_center_no'
        - $ref: '#/components/parameters/McOrderComponentsRequest.order_no'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlannedComponentRoutingLine'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /mes/machine-center/orders:
    get:
      tags:
        - Machine Center
      operationId: MesMachineCenter_getOrders
      parameters:
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/McPlannedOrdersRequest.machine_center_no'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlannedOrderLine'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /mes/machine-center/register-output:
    post:
      tags:
        - Machine Center
      operationId: MesMachineCenter_registerOutput
      parameters:
        - $ref: '#/components/parameters/McRegisterOutputRequest.part_code'
        - $ref: '#/components/parameters/McRegisterOutputRequest.machine_center_no'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /mes/machine-center/scan-info:
    get:
      tags:
        - Machine Center
      operationId: MesMachineCenter_getScanInfo
      parameters:
        - $ref: '#/components/parameters/ScanInfoRequest'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanInfoResponse'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /mes/machine-centers:
    get:
      tags:
        - Machine Centers
      operationId: MachineCenters_list
      parameters:
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_dir'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_by'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MachineCenterWithScanners'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /mes/machine-centers/:
    post:
      tags:
        - Machine Centers
      operationId: MachineCenters_post
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineCenter'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineCenterBody'
  /mes/machine-centers/{id}:
    patch:
      tags:
        - Machine Centers
      operationId: MachineCenters_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineCenter'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineCenterPatchBody'
    delete:
      tags:
        - Machine Centers
      operationId: MachineCenters_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /mes/machine-types:
    get:
      tags:
        - Machine Types
      operationId: MachineTypes_list
      parameters:
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MachineType'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /mes/machine-types/:
    post:
      tags:
        - Machine Types
      operationId: MachineTypes_post
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineType'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineTypeBody'
  /mes/machine-types/{id}:
    patch:
      tags:
        - Machine Types
      operationId: MachineTypes_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineType'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineTypeBodyUpdate'
    delete:
      tags:
        - Machine Types
      operationId: MachineTypes_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /mes/orders:
    get:
      tags:
        - Prod Orders
      operationId: MesOrders_list
      parameters:
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_dir'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_by'
        - $ref: '#/components/parameters/OrderIndexFilterRequest.status'
        - $ref: '#/components/parameters/OrderIndexFilterRequest.owner'
        - $ref: '#/components/parameters/OrderIndexFilterRequest.client_name'
        - $ref: '#/components/parameters/OrderIndexFilterRequest.finalisation_date_from'
        - $ref: '#/components/parameters/OrderIndexFilterRequest.finalisation_date_until'
        - $ref: '#/components/parameters/OrderIndexFilterRequest.include'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /mes/orders/{id}/articles/{artId}:
    get:
      tags:
        - Prod Orders
      operationId: MesOrders_getOrderArticleDetail
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: artId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlannedComponentDetail'
  /mes/orders/{id}/articles/{artId}/routing:
    get:
      tags:
        - Prod Orders
      operationId: MesOrders_getOrderArticleRouting
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: artId
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_dir'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_by'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlannedComponentRoutingLine'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /mes/orders/{id}/edge-banding:
    get:
      tags:
        - Prod Orders
      operationId: MesOrders_getOrderEdgeBanding
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_dir'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_by'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderMaterial'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /mes/orders/{id}/plan-positions:
    get:
      tags:
        - Prod Orders
      operationId: MesOrders_getOrderPlanPositions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_dir'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_by'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlannedOrderPosition'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /mes/orders/{id}/plan-positions/{planPosId}:
    get:
      tags:
        - Prod Orders
      operationId: MesOrders_getOrderPlanPosDetail
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: planPosId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlannedOrderPosition'
  /mes/orders/{id}/planned-order-lines:
    get:
      tags:
        - Prod Orders
      operationId: MesOrders_getOrderPlannedOrderLines
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_dir'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_by'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlannedOrderLine'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /mes/orders/{id}/saw-materials:
    get:
      tags:
        - Prod Orders
      operationId: MesOrders_getOrderSawMaterials
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_dir'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_by'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderMaterialItem'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /mes/prod-overview:
    get:
      tags:
        - Prod Overview
      operationId: MesProdOverview_list
      parameters:
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_dir'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_by'
        - $ref: '#/components/parameters/OrderIndexFilterRequest.status'
        - $ref: '#/components/parameters/OrderIndexFilterRequest.owner'
        - $ref: '#/components/parameters/OrderIndexFilterRequest.client_name'
        - $ref: '#/components/parameters/OrderIndexFilterRequest.finalisation_date_from'
        - $ref: '#/components/parameters/OrderIndexFilterRequest.finalisation_date_until'
        - $ref: '#/components/parameters/OrderIndexFilterRequest.include'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /mes/routing-codes:
    get:
      tags:
        - Routing Codes
      operationId: RoutingCodes_list
      parameters:
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/RoutingCode'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /mes/routing-codes/:
    post:
      tags:
        - Routing Codes
      operationId: RoutingCodes_post
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingCode'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingCodeBody'
  /mes/routing-codes/{id}:
    patch:
      tags:
        - Routing Codes
      operationId: RoutingCodes_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingCode'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingCodeBodyUpdate'
    delete:
      tags:
        - Routing Codes
      operationId: RoutingCodes_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /mes/scan:
    post:
      tags:
        - Scan
      operationId: ScanEndpoint_scan
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scan'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanBody'
  /mes/storage-locations:
    get:
      tags:
        - Storage Locations
      operationId: StorageLocations_list
      parameters:
        - name: mc
          in: query
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_dir'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_by'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/StorageLocation'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /operating-hours:
    get:
      tags:
        - Operating Hours
      operationId: OperatingHours_list
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/OperatingHour'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /operating-hours/:
    post:
      tags:
        - Operating Hours
      operationId: OperatingHours_post
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperatingHour'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OperatingHourBody'
  /operating-hours/{id}:
    patch:
      tags:
        - Operating Hours
      operationId: OperatingHours_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatingHour'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperatingHourBodyUpdate'
    delete:
      tags:
        - Operating Hours
      operationId: OperatingHours_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /order-manager/additional-purchase-lines/{id}:
    patch:
      tags:
        - Additional Purchase Lines
      operationId: AdditionalPurchaseLines_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalPurchaseLine'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                material_no:
                  type: string
                name:
                  type: string
                brand:
                  type: string
                type:
                  type: string
                qty:
                  type: number
                uom:
                  type: string
                length_mm:
                  type: integer
                width_mm:
                  type: integer
                height_mm:
                  type: integer
    delete:
      tags:
        - Additional Purchase Lines
      operationId: AdditionalPurchaseLines_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /order-manager/additional-purchase-parts:
    get:
      tags:
        - Additional Purchase Parts
      operationId: AdditionalPurchaseParts_list
      parameters:
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AdditionalPurchasePart'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /order-manager/attachments/{id}:
    get:
      tags:
        - Attachments
      operationId: OrderAttachments_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderAttachment'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Attachments
      operationId: OrderAttachments_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /order-manager/composition-lines/{id}:
    patch:
      tags:
        - Composition Lines
      operationId: OrderCompositionLines_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCompositionLine'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_outsourced:
                  type: boolean
  /order-manager/csv-import/composition:
    post:
      tags:
        - Order Manager
      operationId: OrderManager_importCompositionCsv
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /order-manager/importable-orders:
    get:
      tags:
        - Importable Orders
      operationId: ImportableOrders_list
      parameters:
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SyncedOrder'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /order-manager/order-material-items/{id}:
    patch:
      tags:
        - Order Material Items
      operationId: OrderMaterialItems_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderMaterialItem'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                qty:
                  type: number
  /order-manager/order-task-templates:
    get:
      tags:
        - Order Task Templates
      operationId: OrderTaskTemplates_list
      parameters:
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_dir'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_by'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderTaskTemplate'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /order-manager/order-task-templates/:
    post:
      tags:
        - Order Task Templates
      operationId: OrderTaskTemplates_post
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTaskTemplate'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderTaskTemplateBody'
  /order-manager/order-task-templates/{id}:
    patch:
      tags:
        - Order Task Templates
      operationId: OrderTaskTemplates_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTaskTemplate'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderTaskTemplateBodyUpdate'
    delete:
      tags:
        - Order Task Templates
      operationId: OrderTaskTemplates_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /order-manager/order-tasks/:
    post:
      tags:
        - Order Tasks
      operationId: OrderTasks_post
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTask'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderTaskBody'
  /order-manager/order-tasks/planning-for-week/{week}:
    get:
      tags:
        - Order Tasks
      operationId: OrderTasks_getPlanningForWeek
      parameters:
        - name: week
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderTask'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /order-manager/order-tasks/{id}:
    patch:
      tags:
        - Order Tasks
      operationId: OrderTasks_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTask'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderTaskUpdateBody'
    delete:
      tags:
        - Order Tasks
      operationId: OrderTasks_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /order-manager/orders:
    get:
      tags:
        - Orders
      operationId: Orders_list
      parameters:
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_dir'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_by'
        - $ref: '#/components/parameters/OrderIndexFilterRequest.status'
        - $ref: '#/components/parameters/OrderIndexFilterRequest.owner'
        - $ref: '#/components/parameters/OrderIndexFilterRequest.client_name'
        - $ref: '#/components/parameters/OrderIndexFilterRequest.finalisation_date_from'
        - $ref: '#/components/parameters/OrderIndexFilterRequest.finalisation_date_until'
        - $ref: '#/components/parameters/OrderIndexFilterRequest.include'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /order-manager/orders/:
    post:
      tags:
        - Orders
      operationId: Orders_post
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreateBody'
  /order-manager/orders/{id}:
    get:
      tags:
        - Orders
      operationId: Orders_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    patch:
      tags:
        - Orders
      operationId: Orders_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderBody'
    delete:
      tags:
        - Orders
      operationId: Orders_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /order-manager/orders/{id}/additional-purchase-lines:
    get:
      tags:
        - Orders
      operationId: Orders_getAdditionalPurchLines
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_dir'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_by'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AdditionalPurchaseLine'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Orders
      operationId: Orders_postAdditionalPurchLines
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalPurchaseLine'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                erp_no:
                  type: string
                material_no:
                  type: string
                name:
                  type: string
                brand:
                  type: string
                type:
                  type: string
                qty:
                  type: number
                uom:
                  type: string
                length_mm:
                  type: integer
                width_mm:
                  type: integer
                height_mm:
                  type: integer
  /order-manager/orders/{id}/attachments:
    get:
      tags:
        - Orders
      operationId: Orders_getAttachments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderAttachment'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    post:
      tags:
        - Orders
      operationId: Orders_postAttachments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /order-manager/orders/{id}/composition:
    get:
      tags:
        - Orders
      operationId: Orders_getCompositionLines
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_dir'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_by'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderComposition'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /order-manager/orders/{id}/order-materials:
    get:
      tags:
        - Orders
      operationId: Orders_getOrderMaterials
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_dir'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_by'
        - $ref: '#/components/parameters/OrderMaterialIndexFilterRequest.category_no'
        - $ref: '#/components/parameters/OrderMaterialIndexFilterRequest.stock_status'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderMaterialWithItems'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /order-manager/orders/{id}/order-materials-csv:
    get:
      tags:
        - Orders
      operationId: Orders_getOrderMaterialsCsv
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/OrderMaterialCsvRequest.excludeRunningMeterParts'
        - $ref: '#/components/parameters/OrderMaterialCsvRequest.excludeSheetMaterials'
        - $ref: '#/components/parameters/OrderMaterialCsvRequest.excludePurchaseParts'
        - $ref: '#/components/parameters/OrderMaterialCsvRequest.excludeFittings'
        - $ref: '#/components/parameters/OrderMaterialCsvRequest.excludeEdging'
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /order-manager/orders/{id}/order-tasks:
    get:
      tags:
        - Orders
      operationId: Orders_getOrderTasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_dir'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_by'
        - $ref: '#/components/parameters/OrderTaskFilterRequest.type'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderTask'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /order-manager/orders/{id}/push-materials-to-erp:
    post:
      tags:
        - Orders
      operationId: Orders_postMaterialsToErp
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /order-manager/orders/{id}/push-order-to-erp:
    post:
      tags:
        - Orders
      operationId: Orders_postOrderToErp
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /order-manager/sync-erp-data:
    post:
      tags:
        - Order Manager
      operationId: OrderManager_syncErpData
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /production-planning/order-tasks/{id}/unplan:
    post:
      tags:
        - Production Planning
      operationId: ProductionPlanningOrders_unplanOrderTask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /production-planning/orders/unplanned:
    get:
      tags:
        - Production Planning
      operationId: ProductionPlanningOrders_getUnplanned
      parameters:
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /production-planning/orders/{id}/autoplan:
    post:
      tags:
        - Production Planning
      operationId: ProductionPlanningOrders_autoplan
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /production-planning/orders/{id}/order-tasks/plan:
    post:
      tags:
        - Production Planning
      operationId: ProductionPlanningOrders_planOrderTasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToPlanTaskBody'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ToPlanTaskBody'
  /production-planning/orders/{id}/plan:
    post:
      tags:
        - Production Planning
      operationId: ProductionPlanningOrders_plan
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPlanBody'
  /production-planning/orders/{id}/unplan:
    post:
      tags:
        - Production Planning
      operationId: ProductionPlanningOrders_unplan
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /production-planning/orders/{id}/workflow:
    get:
      tags:
        - Production Planning
      operationId: ProductionPlanningOrders_workflow
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderWorkflowLine'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /production-planning/planned-order-line/{id}:
    patch:
      tags:
        - Production Planning
      operationId: ProductionPlanningOrders_updatePlannedOrderLine
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlannedOrderLine'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                planned_mc_no:
                  type: string
                planned_start:
                  type: string
                  format: date-time
                planned_duration_in_min:
                  type: integer
                  format: int64
              description: The template for adding updateable properties.
  /production-planning/planned-orders-for-week/{week}:
    get:
      tags:
        - Production Planning
      operationId: ProductionPlanningOrders_plannedOrderLines
      parameters:
        - name: week
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlannedOrderLine'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /reset-demo:
    post:
      tags:
        - Demo
      operationId: Demo_resetDemo
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /resources:
    get:
      tags:
        - Resources
      operationId: Resources_list
      parameters:
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_dir'
        - $ref: '#/components/parameters/PaginatedSortableRequest.sort_by'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Resource'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /resources/:
    post:
      tags:
        - Resources
      operationId: Resources_post
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBody'
  /resources/{id}:
    patch:
      tags:
        - Resources
      operationId: Resources_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBodyUpdate'
    delete:
      tags:
        - Resources
      operationId: Resources_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /users:
    get:
      tags:
        - Users
      operationId: Users_list
      parameters:
        - $ref: '#/components/parameters/PaginatedRequest.page'
        - $ref: '#/components/parameters/PaginatedRequest.perPage'
        - $ref: '#/components/parameters/PaginatedRequest.search'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterOption'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /users/:
    post:
      tags:
        - Users
      operationId: Users_post
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateBody'
  /users/{id}:
    patch:
      tags:
        - Users
      operationId: Users_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateBody'
    delete:
      tags:
        - Users
      operationId: Users_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
components:
  parameters:
    McOrderComponentsRequest.machine_center_no:
      name: machine_center_no
      in: query
      required: true
      schema:
        type: string
    McOrderComponentsRequest.order_no:
      name: order_no
      in: query
      required: true
      schema:
        type: string
    McPlannedOrdersRequest.machine_center_no:
      name: machine_center_no
      in: query
      required: true
      schema:
        type: string
    McRegisterOutputRequest.machine_center_no:
      name: machine_center_no
      in: query
      required: true
      schema:
        type: string
    McRegisterOutputRequest.part_code:
      name: part_code
      in: query
      required: true
      schema:
        type: string
    OrderIndexFilterRequest.client_name:
      name: client_name
      in: query
      required: false
      schema:
        type: string
    OrderIndexFilterRequest.finalisation_date_from:
      name: finalisation_date_from
      in: query
      required: false
      schema:
        type: string
    OrderIndexFilterRequest.finalisation_date_until:
      name: finalisation_date_until
      in: query
      required: false
      schema:
        type: string
    OrderIndexFilterRequest.include:
      name: include
      in: query
      required: false
      schema:
        type: string
        enum:
          - tasks
    OrderIndexFilterRequest.owner:
      name: owner
      in: query
      required: false
      schema:
        type: string
    OrderIndexFilterRequest.status:
      name: status
      in: query
      required: false
      schema:
        type: string
    OrderMaterialCsvRequest.excludeEdging:
      name: excludeEdging
      in: query
      required: false
      schema:
        type: boolean
    OrderMaterialCsvRequest.excludeFittings:
      name: excludeFittings
      in: query
      required: false
      schema:
        type: boolean
    OrderMaterialCsvRequest.excludePurchaseParts:
      name: excludePurchaseParts
      in: query
      required: false
      schema:
        type: boolean
    OrderMaterialCsvRequest.excludeRunningMeterParts:
      name: excludeRunningMeterParts
      in: query
      required: false
      schema:
        type: boolean
    OrderMaterialCsvRequest.excludeSheetMaterials:
      name: excludeSheetMaterials
      in: query
      required: false
      schema:
        type: boolean
    OrderMaterialIndexFilterRequest.category_no:
      name: category_no
      in: query
      required: false
      schema:
        type: string
    OrderMaterialIndexFilterRequest.stock_status:
      name: stock_status
      in: query
      required: false
      schema:
        type: string
    OrderTaskFilterRequest.type:
      name: type
      in: query
      required: false
      schema:
        type: string
        enum:
          - preparation
          - finalisation
    PaginatedRequest.page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        format: int32
    PaginatedRequest.perPage:
      name: perPage
      in: query
      required: false
      schema:
        type: integer
        format: int32
    PaginatedRequest.search:
      name: search
      in: query
      required: false
      schema:
        type: string
    PaginatedSortableRequest.sort_by:
      name: sort_by
      in: query
      required: false
      schema:
        type: string
    PaginatedSortableRequest.sort_dir:
      name: sort_dir
      in: query
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
    ScanInfoRequest:
      name: scancode
      in: query
      required: true
      schema:
        type: string
  schemas:
    AdditionalPurchaseLine:
      type: object
      required:
        - id
        - order_no
        - material_no
        - name
        - qty
        - uom
      properties:
        id:
          type: integer
          format: uint64
        order_no:
          type: string
        material_no:
          type: string
        erp_no:
          type: string
          nullable: true
        imos_no:
          type: string
          nullable: true
        name:
          type: string
        brand:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        category_no:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        qty:
          type: number
        uom:
          type: string
        length_mm:
          type: number
          nullable: true
        width_mm:
          type: number
          nullable: true
        height_mm:
          type: number
          nullable: true
    AdditionalPurchasePart:
      type: object
      required:
        - id
        - no
        - no_2
        - description
        - description_2
        - unit_price
        - inventory
      properties:
        id:
          type: integer
          format: int64
        no:
          type: string
        no_2:
          type: string
        description:
          type: string
        description_2:
          type: string
        unit_price:
          type: number
          format: decimal
        inventory:
          type: integer
          format: int32
    AppSetting:
      type: object
      required:
        - post_panel_consumption_to_erp
        - use_sorting_locations
        - default_whse_location_code
        - default_prod_duration_days
      properties:
        post_panel_consumption_to_erp:
          type: boolean
        use_sorting_locations:
          type: boolean
        default_whse_location_code:
          type: string
        default_prod_duration_days:
          type: number
    AppSettingBody:
      type: object
      properties:
        post_panel_consumption_to_erp:
          type: boolean
        use_sorting_locations:
          type: boolean
        default_whse_location_code:
          type: string
        default_prod_duration_days:
          type: number
    BadRequestError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    BrokenPartReason:
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
      description: BrokenPartReason *
    BrokenPartReasonBody:
      type: object
      required:
        - title
      properties:
        title:
          type: string
    BrokenPartReasonBodyUpdate:
      type: object
      properties:
        title:
          type: string
    BrokenPlannedComponent:
      type: object
      required:
        - id
        - order_no
        - part_no
        - ncno
        - item_no
        - plan_pos
        - broken_part_reason_id
      properties:
        id:
          type: integer
          format: int64
        order_no:
          type: string
        part_no:
          type: string
        ncno:
          type: string
        item_no:
          type: string
          nullable: true
        plan_pos:
          anyOf:
            - type: string
            - type: string
              enum:
                - ''
          nullable: true
        broken_part_reason_id:
          type: number
      description: (Broken) Planned Component *
    Client:
      type: object
      required:
        - client_no
        - client_name
        - client_address_line1
        - client_street
        - client_street_no
        - client_postal_code
        - client_city
        - client_country_code
      properties:
        client_no:
          type: string
        client_name:
          type: string
        client_address_line1:
          type: string
        client_street:
          type: string
        client_street_no:
          type: string
        client_postal_code:
          type: string
        client_city:
          type: string
        client_country_code:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    FilterOption:
      type: object
      required:
        - name
        - type
      properties:
        name:
          type: string
        type:
          type: string
        options:
          type: array
          items:
            type: string
          nullable: true
    FinishAllBody:
      type: object
      required:
        - timestamp
        - mc
        - order_no
      properties:
        timestamp:
          type: integer
          format: uint16
        mc:
          type: string
        order_no:
          type: string
    GroupedPlannedComponentRoutingLine:
      type: object
      required:
        - plan_pos
        - component_lines
      properties:
        plan_pos:
          type: string
        component_lines:
          type: array
          items:
            $ref: '#/components/schemas/PlannedComponentRoutingLine'
    InternalServerError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    LoginResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string
    LogoutResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    MachineCenter:
      type: object
      required:
        - id
        - no
        - name
        - scan_code
        - machine_type_code
        - active_broken_part_reason_id
      properties:
        id:
          type: integer
          format: int64
        no:
          type: string
          example: CNC_1
        name:
          type: string
          example: CNC Homag 1
        scan_code:
          type: string
          example: CNC_1
        machine_type_code:
          type: string
          example: CNC
        active_broken_part_reason_id:
          type: integer
          format: int64
          nullable: true
          example: 1
    MachineCenterBody:
      type: object
      required:
        - no
        - name
        - scan_code
        - machine_type_code
      properties:
        no:
          type: string
          example: CNC_1
        name:
          type: string
          example: CNC Homag 1
        scan_code:
          type: string
          example: CNC_1
        machine_type_code:
          type: string
          example: CNC
    MachineCenterPatchBody:
      type: object
      properties:
        no:
          type: string
          example: CNC_1
        name:
          type: string
          example: CNC Homag 1
        scan_code:
          type: string
          example: CNC_1
        machine_type_code:
          type: string
          example: CNC
        active_broken_part_reason_id:
          type: integer
          format: int64
          nullable: true
          example: 1
    MachineCenterWithScanners:
      type: object
      required:
        - id
        - no
        - name
        - scan_code
        - machine_type_code
        - active_broken_part_reason_id
        - scanners
      properties:
        id:
          type: integer
          format: int64
        no:
          type: string
          example: CNC_1
        name:
          type: string
          example: CNC Homag 1
        scan_code:
          type: string
          example: CNC_1
        machine_type_code:
          type: string
          example: CNC
        active_broken_part_reason_id:
          type: integer
          format: int64
          nullable: true
          example: 1
        scanners:
          type: array
          items:
            $ref: '#/components/schemas/Scanner'
    MachineType:
      type: object
      required:
        - id
        - code
        - name
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
          example: CNC
        name:
          type: string
          example: CNC
    MachineTypeBody:
      type: object
      required:
        - code
        - name
      properties:
        code:
          type: string
          example: CNC
        name:
          type: string
          example: CNC
    MachineTypeBodyUpdate:
      type: object
      properties:
        code:
          type: string
          example: CNC
        name:
          type: string
          example: CNC
    MeResponse:
      type: object
      required:
        - name
        - email
        - role
      properties:
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum:
            - user
            - planner
            - admin
            - superadmin
    NotFoundError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    OperatingHour:
      type: object
      required:
        - id
        - day
        - start
        - end
        - updated_at
        - created_at
      properties:
        id:
          type: integer
          format: int32
        day:
          type: string
        start:
          type: string
        end:
          type: string
        updated_at:
          type: string
        created_at:
          type: string
    OperatingHourBody:
      type: object
      required:
        - day
        - start
        - end
      properties:
        day:
          type: string
        start:
          type: string
        end:
          type: string
    OperatingHourBodyUpdate:
      type: object
      properties:
        day:
          type: string
        start:
          type: string
        end:
          type: string
    Order:
      type: object
      required:
        - id
        - name
        - description
        - notes
        - status
        - owner
        - responsible
        - employee
        - client_no
        - client_name
        - client_address_line1
        - client_street
        - client_street_no
        - client_postal_code
        - client_city
        - client_country_code
        - drawing_no
        - location
        - is_production_planned
        - prep_start_date
        - prep_duration_days
        - prod_start_date
        - prod_duration_days
        - finalisation_start_date
        - finalisation_duration_days
        - finalisation_date
        - creation_date
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          format: int64
        no:
          type: string
          nullable: true
        erp_order_no:
          type: string
          nullable: true
        name:
          type: string
        description:
          type: string
        notes:
          type: string
        status:
          type: string
        owner:
          type: string
        responsible:
          type: string
        employee:
          type: string
        client_no:
          type: string
        client_name:
          type: string
        client_address_line1:
          type: string
        client_street:
          type: string
        client_street_no:
          type: string
        client_postal_code:
          type: string
        client_city:
          type: string
        client_country_code:
          type: string
        drawing_no:
          type: string
        location:
          type: string
        is_production_planned:
          type: boolean
          readOnly: true
        prep_start_date:
          type: string
          format: date
          nullable: true
        prep_duration_days:
          type: integer
        prod_start_date:
          type: string
          format: date
          nullable: true
        prod_duration_days:
          type: integer
        finalisation_start_date:
          type: string
          format: date
          nullable: true
        finalisation_duration_days:
          type: integer
        finalisation_date:
          type: string
          format: date
          nullable: true
        creation_date:
          type: string
          format: date
        part_count:
          type: integer
          format: int64
          readOnly: true
        article_count:
          type: integer
          format: int64
          readOnly: true
        created_at:
          type: string
        updated_at:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/OrderTask'
          nullable: true
        planned_order_lines:
          type: array
          items:
            $ref: '#/components/schemas/PlannedOrderLineWithOrderInfo'
          nullable: true
    OrderAttachment:
      type: object
      required:
        - id
        - order_no
        - type
        - path
      properties:
        id:
          type: integer
          format: uint64
        order_no:
          type: string
        type:
          type: string
        path:
          type: string
    OrderComposition:
      type: object
      required:
        - plan_pos
        - children
      properties:
        plan_pos:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/OrderCompositionLine'
    OrderCompositionLine:
      type: object
      required:
        - id
        - order_id
        - order_no
        - order_name
        - group_name
        - ext_id
        - type_no
        - type_name
        - part_type_no
        - part_type_name
        - plan_pos
        - ncno
        - name
        - article_name
        - subassembly_name
        - part_name
        - scan_code
        - is_outsourced
      properties:
        id:
          type: integer
          format: uint64
        order_id:
          type: integer
          format: uint64
        order_no:
          type: string
        order_name:
          type: string
        group_name:
          type: string
          nullable: true
        ext_id:
          type: string
          nullable: true
        type_no:
          type: string
          nullable: true
        type_name:
          type: string
          nullable: true
        part_type_no:
          type: string
          nullable: true
        part_type_name:
          type: string
          nullable: true
        plan_pos:
          type: string
          nullable: true
        ncno:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        article_name:
          type: string
          nullable: true
        subassembly_name:
          type: string
          nullable: true
        part_name:
          type: string
          nullable: true
        destination:
          type: string
          nullable: true
        length_mm:
          type: number
          nullable: true
        width_mm:
          type: number
          nullable: true
        height_mm:
          type: number
          nullable: true
        cut_length_mm:
          type: number
          nullable: true
        cut_width_mm:
          type: number
          nullable: true
        scan_code:
          type: string
          nullable: true
        is_outsourced:
          type: boolean
    OrderCreateBody:
      type: object
      required:
        - name
        - finalisation_date
      properties:
        synced_order_no:
          type: string
          nullable: true
        name:
          type: string
        finalisation_date:
          type: string
          format: date-time
        finalisation_duration_days:
          type: integer
        prod_duration_days:
          type: integer
        prep_duration_days:
          type: integer
    OrderImportResponse:
      type: object
      required:
        - id
        - name
        - description
        - notes
        - status
        - owner
        - responsible
        - employee
        - client_no
        - client_name
        - client_address_line1
        - client_street
        - client_street_no
        - client_postal_code
        - client_city
        - client_country_code
        - drawing_no
        - location
        - is_production_planned
        - prep_start_date
        - prep_duration_days
        - prod_start_date
        - prod_duration_days
        - finalisation_start_date
        - finalisation_duration_days
        - finalisation_date
        - creation_date
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          format: int64
        no:
          type: string
          nullable: true
        erp_order_no:
          type: string
          nullable: true
        name:
          type: string
        description:
          type: string
        notes:
          type: string
        status:
          type: string
        owner:
          type: string
        responsible:
          type: string
        employee:
          type: string
        client_no:
          type: string
        client_name:
          type: string
        client_address_line1:
          type: string
        client_street:
          type: string
        client_street_no:
          type: string
        client_postal_code:
          type: string
        client_city:
          type: string
        client_country_code:
          type: string
        drawing_no:
          type: string
        location:
          type: string
        is_production_planned:
          type: boolean
          readOnly: true
        prep_start_date:
          type: string
          format: date
          nullable: true
        prep_duration_days:
          type: integer
        prod_start_date:
          type: string
          format: date
          nullable: true
        prod_duration_days:
          type: integer
        finalisation_start_date:
          type: string
          format: date
          nullable: true
        finalisation_duration_days:
          type: integer
        finalisation_date:
          type: string
          format: date
          nullable: true
        creation_date:
          type: string
          format: date
        part_count:
          type: integer
          format: int64
          readOnly: true
        article_count:
          type: integer
          format: int64
          readOnly: true
        created_at:
          type: string
        updated_at:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/OrderTask'
          nullable: true
        planned_order_lines:
          type: array
          items:
            $ref: '#/components/schemas/PlannedOrderLineWithOrderInfo'
          nullable: true
    OrderMaterial:
      type: object
      required:
        - id
        - order_no
        - material_no
        - material_name
        - net_qty
        - gross_qty
        - cut_loss
        - uom
        - category_no
        - stock_status
      properties:
        id:
          type: integer
          format: uint64
        order_no:
          type: string
        material_no:
          type: string
        material_name:
          type: string
        net_qty:
          type: number
          format: float
        gross_qty:
          type: number
          format: float
        cut_loss:
          type: number
          format: float
        uom:
          type: string
        category_no:
          type: string
          nullable: true
        stock_status:
          type: string
          nullable: true
    OrderMaterialItem:
      type: object
      required:
        - id
        - order_no
        - material_no
        - material_name
        - item_no
        - item_name
        - unit_qty
        - total_qty
        - qty
        - uom
        - category_no
        - stock_status
        - whse_location_code
        - provision_date
        - erp_posted_prov_qty
        - erp_posted_prov_date
      properties:
        id:
          type: integer
          format: uint64
        order_no:
          type: string
        material_no:
          type: string
        material_name:
          type: string
        item_no:
          type: string
        item_name:
          type: string
        unit_qty:
          type: number
        total_qty:
          type: number
        qty:
          type: number
        uom:
          type: string
        category_no:
          type: string
          nullable: true
        stock_status:
          type: string
          nullable: true
        whse_location_code:
          type: string
          nullable: true
        provision_date:
          type: string
          nullable: true
        erp_posted_prov_qty:
          type: number
        erp_posted_prov_date:
          type: string
          nullable: true
    OrderMaterialWithItems:
      type: object
      required:
        - id
        - order_no
        - material_no
        - material_name
        - net_qty
        - gross_qty
        - cut_loss
        - uom
        - category_no
        - stock_status
        - order_material_items
      properties:
        id:
          type: integer
          format: uint64
        order_no:
          type: string
        material_no:
          type: string
        material_name:
          type: string
        net_qty:
          type: number
          format: float
        gross_qty:
          type: number
          format: float
        cut_loss:
          type: number
          format: float
        uom:
          type: string
        category_no:
          type: string
          nullable: true
        stock_status:
          type: string
          nullable: true
        order_material_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderMaterialItem'
    OrderPlanBody:
      type: object
      required:
        - planned_start
        - routing
      properties:
        planned_start:
          type: string
          format: date-time
        routing:
          type: array
          items:
            type: object
            properties:
              routing_code:
                type: string
              run_time:
                type: number
              machine_center_no:
                type: string
            required:
              - routing_code
              - run_time
              - machine_center_no
    OrderTask:
      type: object
      required:
        - id
        - order_id
        - type
        - title
        - should_be_planned
        - is_required_for_production
      properties:
        id:
          type: integer
          format: uint64
        order_id:
          type: integer
        type:
          type: string
          enum:
            - preparation
            - finalisation
        title:
          type: string
        should_be_planned:
          type: boolean
        is_required_for_production:
          type: boolean
        is_external:
          type: boolean
        is_finished:
          type: boolean
        finished_by:
          type: number
          nullable: true
        dependant_on:
          type: array
          items:
            type: number
          nullable: true
        duration_in_min:
          type: number
          nullable: true
        due_offset_days:
          type: number
        due_date:
          type: string
          nullable: true
        planned_resource_id:
          type: number
          nullable: true
        planned_start:
          type: string
          format: date-time
          nullable: true
    OrderTaskBody:
      type: object
      required:
        - order_id
        - type
        - title
        - should_be_planned
        - is_required_for_production
        - is_external
        - is_finished
        - dependant_on
      properties:
        order_id:
          type: integer
          format: uint64
        type:
          type: string
          enum:
            - preparation
            - finalisation
        title:
          type: string
        should_be_planned:
          type: boolean
        is_required_for_production:
          type: boolean
        is_external:
          type: boolean
        is_finished:
          type: boolean
        dependant_on:
          type: array
          items:
            type: integer
    OrderTaskTemplate:
      type: object
      required:
        - id
        - type
        - title
        - should_be_planned
        - is_required_for_production
      properties:
        id:
          type: integer
          format: uint64
        type:
          type: string
          enum:
            - preparation
            - finalisation
        title:
          type: string
        should_be_planned:
          type: boolean
        is_required_for_production:
          type: boolean
        is_external:
          type: boolean
        dependant_on:
          type: array
          items:
            type: number
          nullable: true
        duration_in_min:
          type: number
          nullable: true
        due_offset_days:
          type: number
    OrderTaskTemplateBody:
      type: object
      required:
        - type
        - title
        - should_be_planned
        - is_required_for_production
        - is_external
        - dependant_on
      properties:
        type:
          type: string
          enum:
            - preparation
            - finalisation
        title:
          type: string
        should_be_planned:
          type: boolean
        is_required_for_production:
          type: boolean
        is_external:
          type: boolean
        dependant_on:
          type: array
          items:
            type: number
          nullable: true
        duration_in_min:
          type: number
          nullable: true
        due_offset_days:
          type: number
    OrderTaskTemplateBodyUpdate:
      type: object
      properties:
        type:
          type: string
          enum:
            - preparation
            - finalisation
        title:
          type: string
        should_be_planned:
          type: boolean
        is_required_for_production:
          type: boolean
        is_external:
          type: boolean
        dependant_on:
          type: array
          items:
            type: number
          nullable: true
        duration_in_min:
          type: number
          nullable: true
        due_offset_days:
          type: number
    OrderTaskUpdateBody:
      type: object
      properties:
        type:
          type: string
          enum:
            - preparation
            - finalisation
        title:
          type: string
        should_be_planned:
          type: boolean
        is_required_for_production:
          type: boolean
        is_external:
          type: boolean
        is_finished:
          type: boolean
        dependant_on:
          type: array
          items:
            type: integer
        duration_in_min:
          type: number
          nullable: true
        planned_resource_id:
          type: number
          nullable: true
        planned_start:
          type: string
          format: date-time
          nullable: true
    OrderWorkflowLine:
      type: object
      required:
        - routing_code
        - machine_type_code
        - qty
        - run_time
        - setup_time
        - machine_center_no
      properties:
        routing_code:
          type: string
        machine_type_code:
          type: string
        qty:
          type: integer
        run_time:
          type: number
        setup_time:
          type: number
        machine_center_no:
          type: string
    PaginationLinks:
      type: object
      properties:
        first:
          type: string
          nullable: true
        last:
          type: string
          nullable: true
        prev:
          type: string
          nullable: true
        next:
          type: string
          nullable: true
    PaginationMeta:
      type: object
      required:
        - current_page
        - from
        - last_page
        - path
        - per_page
        - to
        - total
      properties:
        current_page:
          type: integer
          format: int32
        from:
          type: integer
          format: int32
          nullable: true
        last_page:
          type: integer
          format: int32
        path:
          type: string
        per_page:
          type: integer
          format: int32
        to:
          type: integer
          format: int32
          nullable: true
        total:
          type: integer
          format: int32
    PlannedComponent:
      type: object
      required:
        - id
        - order_no
        - part_no
        - ncno
        - item_no
        - name
        - plan_pos
        - length_mm
        - width_mm
        - height_mm
        - cut_length_mm
        - cut_width_mm
        - material_no
        - scan_code
        - last_scanned_position_type
        - last_scanned_position_no
        - move_to_position_type
        - move_to_position_no
        - is_waiting_for_sorting_location
        - is_broken_part
        - broken_part_reason_id
        - production_started_at
        - finished_at
      properties:
        id:
          type: integer
          format: int32
        order_no:
          type: string
        part_no:
          type: string
        ncno:
          type: string
        item_no:
          type: string
          nullable: true
        name:
          type: string
        plan_pos:
          type: string
          nullable: true
        length_mm:
          type: integer
          format: int32
          nullable: true
        width_mm:
          type: integer
          format: int32
          nullable: true
        height_mm:
          type: integer
          format: int32
          nullable: true
        cut_length_mm:
          type: integer
          format: int32
          nullable: true
        cut_width_mm:
          type: integer
          format: int32
          nullable: true
        material_no:
          type: string
          nullable: true
        scan_code:
          type: string
          nullable: true
        last_scanned_position_type:
          type: string
          nullable: true
        last_scanned_position_no:
          type: string
          nullable: true
        move_to_position_type:
          type: string
          nullable: true
        move_to_position_no:
          type: string
          nullable: true
        is_waiting_for_sorting_location:
          type: boolean
        is_broken_part:
          type: boolean
        broken_part_reason_id:
          type: number
          nullable: true
        production_started_at:
          type: string
          nullable: true
        finished_at:
          type: string
          nullable: true
    PlannedComponentDetail:
      type: object
      required:
        - id
        - order_no
        - part_no
        - ncno
        - item_no
        - name
        - plan_pos
        - length_mm
        - width_mm
        - height_mm
        - cut_length_mm
        - cut_width_mm
        - material_no
        - scan_code
        - last_scanned_position_type
        - last_scanned_position_no
        - move_to_position_type
        - move_to_position_no
        - is_waiting_for_sorting_location
        - is_broken_part
        - broken_part_reason_id
        - production_started_at
        - finished_at
        - plan_pos_id
        - grain_orientation
        - edge_banding_front
        - edge_banding_front_trans
        - edge_banding_back
        - edge_banding_back_trans
        - edge_banding_left
        - edge_banding_left_trans
        - edge_banding_right
        - edge_banding_right_trans
        - edge_banding_top
        - edge_banding_top_trans
        - edge_banding_bottom
        - edge_banding_bottom_trans
        - prod_planned_start
        - prod_status
      properties:
        id:
          type: integer
          format: int32
        order_no:
          type: string
        part_no:
          type: string
        ncno:
          type: string
        item_no:
          type: string
          nullable: true
        name:
          type: string
        plan_pos:
          type: string
          nullable: true
        length_mm:
          type: integer
          format: int32
          nullable: true
        width_mm:
          type: integer
          format: int32
          nullable: true
        height_mm:
          type: integer
          format: int32
          nullable: true
        cut_length_mm:
          type: integer
          format: int32
          nullable: true
        cut_width_mm:
          type: integer
          format: int32
          nullable: true
        material_no:
          type: string
          nullable: true
        scan_code:
          type: string
          nullable: true
        last_scanned_position_type:
          type: string
          nullable: true
        last_scanned_position_no:
          type: string
          nullable: true
        move_to_position_type:
          type: string
          nullable: true
        move_to_position_no:
          type: string
          nullable: true
        is_waiting_for_sorting_location:
          type: boolean
        is_broken_part:
          type: boolean
        broken_part_reason_id:
          type: number
          nullable: true
        production_started_at:
          type: string
          nullable: true
        finished_at:
          type: string
          nullable: true
        plan_pos_id:
          type: integer
          format: int16
          nullable: true
        grain_orientation:
          type: string
          enum:
            - unknown
            - longitudinal
            - transversal
        edge_banding_front:
          type: string
          nullable: true
        edge_banding_front_trans:
          type: string
          nullable: true
        edge_banding_back:
          type: string
          nullable: true
        edge_banding_back_trans:
          type: string
          nullable: true
        edge_banding_left:
          type: string
          nullable: true
        edge_banding_left_trans:
          type: string
          nullable: true
        edge_banding_right:
          type: string
          nullable: true
        edge_banding_right_trans:
          type: string
          nullable: true
        edge_banding_top:
          type: string
          nullable: true
        edge_banding_top_trans:
          type: string
          nullable: true
        edge_banding_bottom:
          type: string
          nullable: true
        edge_banding_bottom_trans:
          type: string
          nullable: true
        prod_planned_start:
          type: string
          nullable: true
        prod_status:
          type: string
          enum:
            - planned
            - in_production
            - finished
    PlannedComponentRoutingLine:
      type: object
      required:
        - id
        - order_no
        - no
        - part_no
        - description
        - description_2
        - qty
        - routing_no
        - scan_code
        - status
        - can_be_started
        - take_from_position_no
        - finished_at
      properties:
        id:
          type: integer
          format: int64
        order_no:
          type: string
        no:
          type: string
        part_no:
          type: string
        description:
          type: string
        description_2:
          type: string
        qty:
          type: number
        routing_no:
          type: string
        scan_code:
          type: string
          nullable: true
        status:
          type: string
        can_be_started:
          type: boolean
        take_from_position_no:
          type: string
          nullable: true
        finished_at:
          type: string
          nullable: true
    PlannedOrderLine:
      type: object
      required:
        - id
        - order_id
        - order_no
        - routing_code
        - machine_type_code
        - description
        - client_no
        - client_name
        - parts_count
        - finished_parts_count
        - finished_at
        - planned_mc_no
        - planned_start
        - planned_duration_in_min
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        order_id:
          type: integer
          format: int64
          readOnly: true
        order_no:
          type: string
          readOnly: true
        routing_code:
          type: string
          readOnly: true
        machine_type_code:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        client_no:
          type: string
          readOnly: true
        client_name:
          type: string
          readOnly: true
        parts_count:
          type: integer
          format: int64
          readOnly: true
        finished_parts_count:
          type: integer
          format: int64
          readOnly: true
        finished_at:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        planned_mc_no:
          type: string
        planned_start:
          type: string
          format: date-time
        planned_duration_in_min:
          type: integer
          format: int64
    PlannedOrderLineWithOrderInfo:
      type: object
      required:
        - id
        - order_no
        - order_name
        - order_descr
        - routing_code
        - status
        - client_no
        - client_name
        - planned_mc_no
        - planned_start
        - planned_duration_in_min
        - parts_count
        - finished_parts_count
        - finished_at
      properties:
        id:
          type: integer
          format: int64
        order_no:
          type: string
          nullable: true
        order_name:
          type: string
          nullable: true
        order_descr:
          type: string
          nullable: true
        routing_code:
          type: string
        status:
          type: string
        client_no:
          type: string
        client_name:
          type: string
        planned_mc_no:
          type: string
        planned_start:
          type: string
        planned_duration_in_min:
          type: number
        parts_count:
          type: number
        finished_parts_count:
          type: number
        finished_at:
          type: string
          nullable: true
    PlannedOrderPosition:
      type: object
      required:
        - id
        - order_id
        - order_no
        - no
        - name
        - item_no
        - destination
        - length_mm
        - width_mm
        - height_mm
        - image
        - status
        - planned_components
      properties:
        id:
          type: integer
          format: int32
        order_id:
          type: integer
          format: int32
        order_no:
          type: string
        no:
          type: string
        name:
          type: string
        item_no:
          type: string
        destination:
          type: string
        length_mm:
          type: number
        width_mm:
          type: number
        height_mm:
          type: number
        image:
          type: string
          nullable: true
        status:
          type: string
          enum:
            - planned
            - in_production
            - finished
        planned_components:
          type: array
          items:
            $ref: '#/components/schemas/PlannedComponent'
    Resource:
      type: object
      required:
        - id
        - user_id
        - name
      properties:
        id:
          type: integer
          format: uint64
        user_id:
          type: integer
        name:
          type: string
    ResourceBody:
      type: object
      required:
        - user_id
        - name
      properties:
        user_id:
          type: integer
        name:
          type: string
    ResourceBodyUpdate:
      type: object
      properties:
        user_id:
          type: integer
        name:
          type: string
    RoutingCode:
      type: object
      required:
        - id
        - code
        - name
        - icon
        - machine_type_code
        - display_position
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
          example: DRILL_V
        name:
          type: string
          example: drill vertically
        icon:
          type: string
          nullable: true
          example: /icons/drill-vert.png
        machine_type_code:
          type: string
          nullable: true
          example: CNC
        display_position:
          type: integer
          format: int32
          nullable: true
    RoutingCodeBody:
      type: object
      required:
        - code
        - name
        - icon
        - machine_type_code
        - display_position
      properties:
        code:
          type: string
          example: DRILL_V
        name:
          type: string
          example: drill vertically
        icon:
          type: string
          nullable: true
          example: /icons/drill-vert.png
        machine_type_code:
          type: string
          nullable: true
          example: CNC
        display_position:
          type: integer
          format: int32
          nullable: true
    RoutingCodeBodyUpdate:
      type: object
      properties:
        code:
          type: string
          example: DRILL_V
        name:
          type: string
          example: drill vertically
        icon:
          type: string
          nullable: true
          example: /icons/drill-vert.png
        machine_type_code:
          type: string
          nullable: true
          example: CNC
        display_position:
          type: integer
          format: int32
          nullable: true
    Scan:
      type: object
      required:
        - id
        - event_id
        - value
        - device_no
        - linked_mc
        - is_processed
        - error_message
        - scanned_at
      properties:
        id:
          type: number
        event_id:
          type: string
        value:
          type: string
        device_no:
          type: string
        linked_mc:
          type: string
        is_processed:
          type: boolean
        error_message:
          type: string
        scanned_at:
          type: string
    ScanBody:
      type: object
      required:
        - timestamp
        - scancode
        - mc
      properties:
        timestamp:
          type: integer
          format: uint16
        scancode:
          type: string
        mc:
          type: string
    ScanInfoResponse:
      type: object
      required:
        - part_no
        - nc_no
        - last_scanned_position_type
        - last_scanned_position_no
        - move_to_position_type
        - move_to_position_no
        - is_waiting_for_sorting_location
        - requires_sorting
        - take_from_position_no
        - error_message
      properties:
        part_no:
          type: string
          nullable: true
        nc_no:
          type: string
          nullable: true
        last_scanned_position_type:
          type: string
          enum:
            - machine-center
            - storage-location
          nullable: true
        last_scanned_position_no:
          type: string
          nullable: true
        move_to_position_type:
          type: string
          enum:
            - machine-center
            - storage-location
          nullable: true
        move_to_position_no:
          type: string
          nullable: true
        is_waiting_for_sorting_location:
          type: boolean
        requires_sorting:
          type: boolean
        take_from_position_no:
          type: string
          nullable: true
        error_message:
          type: string
          nullable: true
    Scanner:
      type: object
      required:
        - device_no
        - device_name
        - linked_mc
      properties:
        device_no:
          type: string
        device_name:
          type: string
        linked_mc:
          type: string
    StorageLocation:
      type: object
      required:
        - id
        - no
        - reserved_for
        - status
        - scan_code
        - last_supplied_by
        - qty_required
        - qty_received
      properties:
        id:
          type: integer
          format: int64
        no:
          type: string
        reserved_for:
          type: string
          nullable: true
        status:
          type: string
        scan_code:
          type: string
          nullable: true
        last_supplied_by:
          type: string
          nullable: true
        qty_required:
          type: number
        qty_received:
          type: number
    SyncedOrder:
      type: object
      required:
        - id
        - no
        - name
      properties:
        id:
          type: integer
          format: uint64
        no:
          type: string
        name:
          type: string
        description:
          type: string
        notes:
          type: string
        status:
          type: string
        client_no:
          type: string
        client_name:
          type: string
        client_address_line1:
          type: string
          nullable: true
        client_street:
          type: string
          nullable: true
        client_street_no:
          type: string
          nullable: true
        client_postal_code:
          type: string
          nullable: true
        client_city:
          type: string
          nullable: true
        owner:
          type: string
          nullable: true
        responsible:
          type: string
          nullable: true
        employee:
          type: string
          nullable: true
        drawing_no:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        prod_duration_days:
          type: integer
          nullable: true
        finalisation_duration_days:
          type: integer
          nullable: true
        prep_duration_days:
          type: integer
          nullable: true
    SyncedOrderCompositionLine:
      type: object
      required:
        - id
        - order_id
        - order_no
        - no
        - material_no
        - is_outsourced
      properties:
        id:
          type: integer
          format: uint64
        parent_id:
          type: string
          nullable: true
        order_id:
          type: integer
          format: uint64
        order_no:
          type: string
        no:
          type: string
        type:
          type: integer
          format: uint16
          nullable: true
        part_type:
          type: integer
          format: uint16
          nullable: true
        ref:
          type: string
          nullable: true
        part_no:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        destination:
          type: string
          nullable: true
        length_mm:
          type: number
          nullable: true
        width_mm:
          type: number
          nullable: true
        height_mm:
          type: number
          nullable: true
        surf_m2:
          type: number
          nullable: true
        qty:
          type: integer
          format: uint64
          nullable: true
        material_no:
          type: string
        barcode:
          type: string
          nullable: true
        is_outsourced:
          type: boolean
    ToPlanTaskBody:
      type: object
      required:
        - id
        - duration_in_min
        - planned_resource_id
        - planned_start
      properties:
        id:
          type: integer
          format: uint64
        duration_in_min:
          type: number
        planned_resource_id:
          type: number
        planned_start:
          type: string
          format: date-time
    UpdateOrderBody:
      type: object
      properties:
        name:
          type: string
        no:
          type: string
          nullable: true
        description:
          type: string
        notes:
          type: string
        status:
          type: string
        owner:
          type: string
        responsible:
          type: string
        employee:
          type: string
        client_no:
          type: string
        client_name:
          type: string
        client_address_line1:
          type: string
        client_street:
          type: string
        client_street_no:
          type: string
        client_postal_code:
          type: string
        client_city:
          type: string
        client_country_code:
          type: string
        drawing_no:
          type: string
        location:
          type: string
        prod_duration_days:
          type: integer
        finalisation_duration_days:
          type: integer
        prep_duration_days:
          type: integer
        finalisation_date:
          type: string
          format: date-time
    User:
      type: object
      required:
        - id
        - name
        - email
        - role
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum:
            - user
            - planner
            - admin
            - superadmin
    UserCreateBody:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
          enum:
            - user
            - planner
            - admin
            - superadmin
    UserUpdateBody:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum:
            - user
            - planner
            - admin
            - superadmin
    ValidationError:
      type: object
      required:
        - message
        - errors
      properties:
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
